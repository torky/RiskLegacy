trigger gt_Refresh;

int totalTurnTime = 10;
int remainingTime = 5;
int turns = 0;
int timerDisplay;
int turnDisplay;

bool Refresh(bool testConds, bool runActions){
    int count;
    int i;
    int player;
    playergroup players;

    players = PlayerGroupAll();
    count = PlayerGroupCount(players);

    //Decrement turn time
    remainingTime-=1;
    if(remainingTime <= 0){
        //Increment turns
        RefreshMapHistory(turns);
        turns+=1;
        remainingTime=totalTurnTime;
        libNtve_gf_SetDialogItemText(turnDisplay, IntToText(turns), PlayerGroupAll());
        RefreshIncome();
        RefreshConscripts();
        RefreshScoreboard();
    }else if (remainingTime < 4) {
        SoundPlay(SoundLink("UI_BnetCountdown", -1), players, 100.0, 0.0);
    }
    libNtve_gf_SetDialogItemText(timerDisplay, IntToText(remainingTime), PlayerGroupAll());

    return true;
}

void gt_Refresh_Init(){
    gt_Refresh = TriggerCreate("Refresh");
    timerDisplay = DialogControlHookupStandard(c_triggerControlTypeLabel,"UIContainer/FullscreenUpperContainer/ResourcePanel/ResourceFrame/TimeDisplay");
    turnDisplay = DialogControlHookupStandard(c_triggerControlTypeLabel,"UIContainer/FullscreenUpperContainer/ResourcePanel/ResourceFrame/TurnDisplay");
    TriggerAddEventTimePeriodic(gt_Refresh, 1.0, c_timeGame);
    libNtve_gf_SetDialogItemText(timerDisplay, IntToText(remainingTime), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(turnDisplay, IntToText(turns), PlayerGroupAll());

    TriggerEnable(gt_Refresh, false);
}

void StartRefresh(){
    TriggerEnable(gt_Refresh, true);
}

void StopRefresh(){
    TriggerEnable(gt_Refresh, false);
}