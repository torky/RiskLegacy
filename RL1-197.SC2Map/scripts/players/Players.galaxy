struct Player{
    int income;
};

const int totalPlayers = 16;
Player[totalPlayers] allPlayers;

trigger gt_SetupPlayers;

bool SetupPlayers(bool TestConds, bool RunActions){
    playergroup players;
    int player;
    int i;

    players = PlayerGroupActive();

    for(i = 1; i <= PlayerGroupCount(players); i += 1){
        player = PlayerGroupPlayer(players, i);
        PlayerModifyPropertyInt(player, c_playerPropSuppliesMade, c_playerPropOperSetTo, 1750);
    }

    return true;
}

void gt_SetupPlayers_Init () {
    gt_SetupPlayers = TriggerCreate("SetupPlayers");
    TriggerAddEventMapInit(gt_SetupPlayers);
}

void UpdatePlayerSpawnControlGroup(int player){
    unitgroup spawns;
    spawns = UnitGroup("SpawnZone", player, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    UnitControlGroupClear(player, 9);
    UnitControlGroupAddUnits(player, 9, spawns);
}

void updatePlayerSpawnControlGroups(){
    int i;
    
    for(i = 0; i < totalPlayers; i+=1){
        UpdatePlayerSpawnControlGroup(i);
    }
}