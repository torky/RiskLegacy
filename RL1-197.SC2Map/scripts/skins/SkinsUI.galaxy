struct RequirementUI{
    int unitPulldown;
    int tabButton;
    string requirementType;
    Skin[6] skin;
};

struct SkinUI{
    RequirementUI kills;
    RequirementUI wins;
    RequirementUI prizes;
};

SkinUI skinUI; 

void SetupUnitPulldown(string path, structref<RequirementUI> requirement){
    int i;
    requirement.unitPulldown = DialogControlHookupStandard(c_triggerControlTypePulldown, path);
    for(i = 1; i < totalSkinTypes; i+=1){
        DialogControlAddItem(requirement.unitPulldown, PlayerGroupActive(), StringToText(allSkinTypes[i].unitType));
    }
    DialogControlSelectItem(requirement.unitPulldown, PlayerGroupActive(), c_marineSkinID);
}

void SetupRequirementUI(structref<RequirementUI> requirement, string path, string tabButtonPath, string type){
    requirement.requirementType = type;
    SetupUnitPulldown(path + "UnitSelect", requirement);
    requirement.tabButton = DialogControlHookupStandard(c_triggerControlTypeButton, tabButtonPath);
}

void SetupSkinsUI(){
    InitializeMarineSkins();
    SetupRequirementUI(skinUI.kills, "UIContainer/SkinsUI/KillSkinPanel/", "UIContainer/SkinsUI/KillSkinTab", c_requirementKills);
    SetupRequirementUI(skinUI.kills, "UIContainer/SkinsUI/WinSkinPanel/", "UIContainer/SkinsUI/WinSkinTab", c_requirementKills);
    SetupRequirementUI(skinUI.kills, "UIContainer/SkinsUI/PrizeSkinPanel/", "UIContainer/SkinsUI/PrizeSkinTab", c_requirementKills);
}