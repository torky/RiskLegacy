struct Settings{
    int pingBases;
    int showFlags;
    int showProfile;
    int autoCards;
};

Settings settings;

void HookupSettings(){
    int i;
    settings.pingBases = DialogControlHookupStandard(c_triggerControlTypeCheckBox, "UIContainer/ProfileUI/SettingsPanel/PingBases");
    settings.showFlags = DialogControlHookupStandard(c_triggerControlTypeCheckBox, "UIContainer/ProfileUI/SettingsPanel/ShowFlags");
    settings.showProfile = DialogControlHookupStandard(c_triggerControlTypeCheckBox, "UIContainer/ProfileUI/SettingsPanel/ShowProfile");
    settings.autoCards = DialogControlHookupStandard(c_triggerControlTypeCheckBox, "UIContainer/ProfileUI/SettingsPanel/AutoCards");

    for(i = 0; i < totalPlayers; i+=1){
        libNtve_gf_SetDialogItemChecked(settings.pingBases, allPlayers[i].pingBases == 1, PlayerGroupSingle(i));
        libNtve_gf_SetDialogItemChecked(settings.showFlags, allPlayers[i].showFlags == 1, PlayerGroupSingle(i));
        libNtve_gf_SetDialogItemChecked(settings.showProfile, allPlayers[i].showProfile == 1, PlayerGroupSingle(i));
        libNtve_gf_SetDialogItemChecked(settings.autoCards, allPlayers[i].autoCards == 1, PlayerGroupSingle(i));
    }
}

trigger gt_UpdateCheckBoxSettings;

bool UpdateCheckBoxSettings(bool testConds, bool runActions){
    int player;
    int checkBox;
    bool pingBases;
    bool showFlags;
    bool showProfile;
    bool autoCards;
    playergroup players;

    player = EventPlayer();
    checkBox = EventDialogControl();

    pingBases = libNtve_gf_DialogItemIsChecked(settings.pingBases, player);
    showFlags = libNtve_gf_DialogItemIsChecked(settings.showFlags, player);
    showProfile = libNtve_gf_DialogItemIsChecked(settings.showProfile, player);
    autoCards = libNtve_gf_DialogItemIsChecked(settings.autoCards, player);
    
    if(pingBases) { allPlayers[player].pingBases = 1; } else { allPlayers[player].pingBases = 0; }
    if(showFlags) { 
        allPlayers[player].showFlags = 1; 
        ShowHideAllFlagsForPlayer(player);
    } else { 
        allPlayers[player].showFlags = 0; 
        ShowHideAllFlagsForPlayer(player);
    }
    if(showProfile) { 
        allPlayers[player].showProfile = 1; 
        UpdateProfileVisible(player, true);
    } else { 
        allPlayers[player].showProfile = 0; 
        UpdateProfileVisible(player, false);
    }
    if(autoCards) { allPlayers[player].autoCards = 1; } else { allPlayers[player].autoCards = 0; }

    SavePlayerBankSettings(player);

    return true;
}

void gt_UpdateCheckBoxSettings_Init(){
    int player;
    int r;
    int b;
    int control;
    gt_UpdateCheckBoxSettings = TriggerCreate("UpdateCheckBoxSettings");
    for(player = 0; player < totalPlayers; player +=1){
        TriggerAddEventDialogControl(gt_UpdateCheckBoxSettings, player, settings.pingBases, c_triggerControlEventTypeChecked);
        TriggerAddEventDialogControl(gt_UpdateCheckBoxSettings, player, settings.showFlags, c_triggerControlEventTypeChecked);
        TriggerAddEventDialogControl(gt_UpdateCheckBoxSettings, player, settings.showProfile, c_triggerControlEventTypeChecked);
        TriggerAddEventDialogControl(gt_UpdateCheckBoxSettings, player, settings.autoCards, c_triggerControlEventTypeChecked);
    }
}

void SetupSettingsUI(){
    HookupSettings();
    HookupStatsButtons();
    UpdateAllProfileVisibilities();
    gt_UpdateCheckBoxSettings_Init();
}