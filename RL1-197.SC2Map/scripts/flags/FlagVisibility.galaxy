
void UpdateFlagVisibilityForPlayer(unit flag, int player){
    int flagOwner;
    ShowFlag(flag);
    if(allPlayers[player].showFlags == 1){
        flagOwner = UnitGetOwner(flag);
        if(allPlayers[flagOwner].flag == null 
            || allPlayers[flagOwner].flag == "" 
            || allPlayers[flagOwner].flag == "Nothing" 
            || !allPlayers[flagOwner].showHomeland){
            HideFlagForPlayer(flag, player);
        }
    }else{
        HideFlagForPlayer(flag, player);
    }
}

void ShowHideFlagsForAllPlayers(){
    playergroup players = PlayerGroupActive();
    unitgroup flags = UnitGroup("DestructibleKorhalFlag", c_playerAny, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    int player;
    int flagOwner;
    int playerCount = PlayerGroupCount(players);
    int count = UnitGroupCount(flags, c_unitCountAlive);
    unit flag;

    for (;; count -= 1) {
        flag = UnitGroupUnitFromEnd(flags, count);
        if (flag == null) { break; }
        for(player = 1; player <= playerCount; player+=1){
            UpdateFlagVisibilityForPlayer(flag, player);
        }
    }
}

void SetPlayerFlagsForAllPlayers(int owner){
    playergroup players = PlayerGroupActive();
    unitgroup flags = UnitGroup("DestructibleKorhalFlag", owner, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    int player;
    int flagOwner;
    int playerCount = PlayerGroupCount(players);
    int count = UnitGroupCount(flags, c_unitCountAlive);
    unit flag;

    for (;; count -= 1) {
        flag = UnitGroupUnitFromEnd(flags, count);
        if (flag == null) { break; }
        for(player = 1; player <= playerCount; player+=1){
            SetFlag(flag, allPlayers[player].flag);
            UpdateFlagVisibilityForPlayer(flag, player);
        }
    }
}