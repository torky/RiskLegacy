void StartIncomeTextAnimation(int i, int countryIncome, int countryOwner){
    if(allCountries[i].spawn != null){
        TextTagCreate((StringToText("<img path=\"Assets\\Textures\\icon-energy-nobg.dds\" width=\"27\" height=\"27\"/> ") + IntToText(countryIncome)), 20, UnitGetPosition(allCountries[i].spawn), 1.75, true, false, PlayerGroupSingle(countryOwner));
        TextTagSetColor(TextTagLastCreated(), c_textTagColorText, Color(45.88, 87.45, 83.53));
        TextTagSetFontSize(TextTagLastCreated(), 32);
        TextTagSetVelocity(TextTagLastCreated(), 0.25, 90.0);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 10.0);
    }
}

void RefreshIncome(){
    
    playergroup players;
    int player;
    int i;
    int countryOwner;
    int countryIncome;

    players = PlayerGroupActive();

    //Reset income
    for(i = 1; i <= PlayerGroupCount(players); i += 1){
        player = PlayerGroupPlayer(players, i);
        allPlayers[player].income = 4;
    }

    //Calculate income
    for(i = 0; i < totalCountries; i+=1){
        countryIncome = allCountries[i].income;
        countryOwner = allCountries[i].owner;
        allPlayers[countryOwner].income += countryIncome;
        StartIncomeTextAnimation(i, countryIncome, countryOwner);
    }

    //Add Income
    for(i = 1; i <= PlayerGroupCount(players); i += 1){
        player = PlayerGroupPlayer(players, i);
        PlayerModifyPropertyInt(player, c_playerPropMinerals, c_playerPropOperAdd, allPlayers[player].income);
    }
}
